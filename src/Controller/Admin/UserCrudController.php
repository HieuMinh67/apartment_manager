<?php

namespace App\Controller\Admin;

use App\Entity\User;
use Doctrine\ORM\QueryBuilder;
use EasyCorp\Bundle\EasyAdminBundle\Collection\FieldCollection;
use EasyCorp\Bundle\EasyAdminBundle\Collection\FilterCollection;
use EasyCorp\Bundle\EasyAdminBundle\Config\Action;
use EasyCorp\Bundle\EasyAdminBundle\Config\Actions;
use EasyCorp\Bundle\EasyAdminBundle\Config\Crud;
use EasyCorp\Bundle\EasyAdminBundle\Controller\AbstractCrudController;
use EasyCorp\Bundle\EasyAdminBundle\Dto\EntityDto;
use EasyCorp\Bundle\EasyAdminBundle\Dto\SearchDto;
use EasyCorp\Bundle\EasyAdminBundle\Field\AssociationField;
use EasyCorp\Bundle\EasyAdminBundle\Field\BooleanField;
use EasyCorp\Bundle\EasyAdminBundle\Field\ChoiceField;
use EasyCorp\Bundle\EasyAdminBundle\Field\EmailField;
use EasyCorp\Bundle\EasyAdminBundle\Field\ImageField;
use EasyCorp\Bundle\EasyAdminBundle\Field\IntegerField;
use EasyCorp\Bundle\EasyAdminBundle\Field\TelephoneField;

class UserCrudController extends AbstractCrudController
{
    public static function getEntityFqcn(): string
    {
        return User::class;
    }

    public function createIndexQueryBuilder(SearchDto $searchDto, EntityDto $entityDto, FieldCollection $fields, FilterCollection $filters): QueryBuilder
    {
        if ($this->isGranted('ROLE_ADMIN')) {
            return parent::createIndexQueryBuilder($searchDto, $entityDto, $fields, $filters); // TODO: Change the autogenerated stub
        }
        $qb = parent::createIndexQueryBuilder($searchDto, $entityDto, $fields, $filters);

        $qb->Where('entity.roles LIKE :role')
            ->setParameter('role', '%ROLE_STAFF%');
        return $qb;
    }

    public function configureActions(Actions $actions): Actions
    {
        return $actions
            ->remove(Crud::PAGE_INDEX, Action::EDIT)
            ->remove(Crud::PAGE_INDEX, Action::DELETE);
    }

    public function configureFields(string $pageName): iterable
    {
        if (Crud::PAGE_INDEX == $pageName) {
            yield IntegerField::new('id');
        }
        yield EmailField::new('email');
        $roleChoices = ['Manager' => 'ROLE_MANAGER', 'Staff' => 'ROLE_STAFF'];
        if($this->isGranted('ROLE_ADMIN')) {
            $roleChoices = array_merge($roleChoices, ['Admin' => 'ROLE_ADMIN']);
        }
        yield ChoiceField::new('roles')->setChoices($roleChoices)->allowMultipleChoices();
        if (Crud::PAGE_NEW != $pageName) {
            yield TelephoneField::new('employee.phone')->setLabel('Phone');
        } elseif (Crud::PAGE_NEW == $pageName | Crud::PAGE_EDIT == $pageName) {
            yield AssociationField::new('employee');
        }
        if (Crud::PAGE_INDEX == $pageName) {
            yield ImageField::new('employee.thumbnail')->setBasePath('/images/employee/')->setLabel('Avatar');
        }
        yield BooleanField::new('active');
    }
}
